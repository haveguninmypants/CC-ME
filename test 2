
-- Function to select a source and destination inventory
function selectInventory()
  term.clear()
  term.setCursorPos(1, 1)
  local peripherals = peripheral.getNames()

  -- Remove duplicates by using a set data structure
  local uniquePeripherals = {}
  for _, peripheralName in ipairs(peripherals) do
    uniquePeripherals[peripheralName] = true
  end

  -- Convert the unique peripherals back to a list
  peripherals = {}
  for peripheralName, _ in pairs(uniquePeripherals) do
    table.insert(peripherals, peripheralName)
  end

  table.sort(peripherals)  -- Sort the unique peripherals alphabetically
  local currentPage = 1
  local pageSize = 7
  local totalPages = math.ceil(#peripherals / pageSize)

  while true do
    term.clear()
    term.setCursorPos(1, 1)
    print("Select Source Inventory (Page " .. currentPage .. " of " .. totalPages .. "):")

    local startIndex = (currentPage - 1) * pageSize + 1
    local endIndex = math.min(currentPage * pageSize, #peripherals)

    for i = startIndex, endIndex do
      local option = peripherals[i]
      print(i .. ". " .. option)
    end

    print("Enter the number of your choice (N for Next, P for Previous):")
    local choice = read()

    if tonumber(choice) then
      local numericChoice = tonumber(choice)
      if numericChoice >= 1 and numericChoice <= #peripherals then
        return peripherals[numericChoice]
      end
    elseif choice:lower() == "n" and currentPage < totalPages then
      currentPage = currentPage + 1
    elseif choice:lower() == "p" and currentPage > 1 then
      currentPage = currentPage - 1
    end
  end
end
 selectInventory()
